---
# Defaults variables for the duffy role

duffy_app_version: 3.2.0

duffy_admin_tenant: admin
duffy_admin_api_key: "please override this in production"  # one can use `uuidgen` for this
duffy_admin_ssh_key: "# please override this in production"

duffy_python_executable: python3
duffy_python_pkgs:
  - python3
  - python3-devel
  - python3-pip
  - python3-setuptools
duffy_dev_pkgs:
  - gcc
  - libpq-devel
duffy_venv: /var/lib/duffy/venv
duffy_tasks_schedule_filename: /var/lib/duffy/celerybeat-schedule
duffy_system_config_files:
  - 10_app
  - 20_metaclient
  - 30_logging
  - 40_tasks
  - 50_database
  - 60_defaults
  # Node pool configuration is installed from {{ filestore }}/duffy
  # - 70_nodepools
  - 80_secrets
duffy_user_config_files:
  - 00_client

# Obsolete configuration files which should be removed
duffy_system_config_files_remove:
  - 60_misc

# Some files will be distributed from {{ filestore }}/duffy
# For ref/example, you'll find test files under files/ directory (unused)
duffy_node_pool_config_file: 70_nodepools.yml


# Database settings
duffy_db_user: duffy
duffy_db_name: duffy
duffy_db_pass: "you should use a different password"

## The following is used in the templates for the above configuration files.

# The web API
duffy_app_loglevel: "info"
duffy_app_host: "127.0.0.1"
duffy_app_port: 8080

# The legacy metaclient
duffy_metaclient_loglevel: "info"
duffy_metaclient_host: "127.0.0.1"
duffy_metaclient_port: 9090
duffy_metaclient_dest: "http://127.0.0.1:8080"
# Map API keys to usernames in the legacy API meta client
duffy_metaclient_usermap: {}
# Map incoming requests to specific existing pool
# Attention, it's a raw jinja2 block that is inserted into ansible .j2 template !
duffy_metaclient_poolmap: |
 {%- raw %}
     - arch: "^(aarch64|ppc64|ppc64le)$"
       pool: "virtual-centos{{ ver | replace('-', '') }}-{{ arch }}-{{ flavor | default('medium') }}"
     - arch: "x86_64"
       pool: "virtual-centos{{ ver | replace('-', '') }}-{{ arch }}-{{ flavor | default('small') }}"
 {% endraw %}


# The Celery task workers
duffy_tasks_celery_broker_url: "redis://localhost:6379"
duffy_tasks_celery_result_backend: "redis://localhost:6379"
duffy_tasks_celery_worker_redirect_stdouts_level: "INFO"
duffy_tasks_locking_url: "redis://localhost:6379"
duffy_tasks_fill_pools_interval: 300
duffy_tasks_expire_sessions_interval: 300
duffy_tasks_loglevel: "info"
duffy_tasks_concurrency: 100

# The Duffy database
#
# We use PostgreSQL which by default authenticates Unix users to database users
# of the same name without requiring a password.
duffy_database_sqlalchemy_sync_url: >-
  postgresql://{{ duffy_db_user | urlencode() |replace("/", "%2F") }}:{{ duffy_db_pass | urlencode() |replace("/", "%2F") }}@localhost/{{ duffy_db_name | urlencode() |replace("/", "%2F")}}
duffy_database_sqlalchemy_async_url: >-
  postgresql+asyncpg://{{ duffy_db_user | urlencode() |replace("/", "%2F")}}:{{ duffy_db_pass | urlencode() |replace("/", "%2F")}}@localhost/{{ duffy_db_name | urlencode() |replace("/", "%2F")}}

# Default initial and maximum session lifetimes
duffy_default_session_lifetime: "6h"
duffy_default_session_lifetime_max: "12h"

# Default node quota
duffy_default_node_quota: 10

# Variables for delegated tasks
# Which is the boot_server (ansible-role-boot-server) on which
# we have tftp/ks directory (we need to grant duffy rights)
duffy_boot_server: localhost
